第8章-视图

一、Creating Views
1. 将连接和子查询存储在视图里，简化查询，重复调用，也可以像处理表一样处理他们
2. 视图并不储存数据，只是虚拟表

二、Altering or Dropping Views
1. 不推荐删除再创建，直接使用create or replace就好
2. 工具视图中，sql会加上很多代码，为了防止冲突等等，可以在工具视图中改动，但也不是好方法
3. 最好是存储在文件夹中，并放入源码控制source function

三、Updatable Views
1. 如果视图上不含有distinct，聚合函数，分组和having，union这些，那视图就是可更新视图
2. 可以像对表做操作一样更新数据，插入，删除等等
3. 如果要插入一整行，就需要所有的数据都存在才可以
4. 如果没有视图的编辑权限，可以创造view来做操作，前提是view是可更新的

四、The WITH OPTION CHECK Clause
1. 阻止会使行在视图里消失的操作，会直接体现为报错

五、Other Benefits of Views 视图的其他优点
1. 简化查询
2. 减小数据库设计改动的影响。抽象化基础表
①对数据库的改动可能会导致之前写的查询无效，但如果已经保存好了视图，就可以直接对视图的代码进行改动
②比如改变数据库列的名称，导致之前的查询无效，此时可以利用创建视图代码，把改动的列取别名为其之前的名字，使得之前撰写的查询依然有效
③如果查询是基于视图的，也不会受到数据库基础表改动的影响
3. 使用视图限制基础表访问
